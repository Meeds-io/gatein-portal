<?xml version="1.0" encoding="UTF-8"?>
<!--

 This file is part of the Meeds project (https://meeds.io/).
 
 Copyright (C) 2020 - 2022 Meeds Association contact@meeds.io
 
 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 3 of the License, or (at your option) any later version.
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public License
 along with this program; if not, write to the Free Software Foundation,
 Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

-->
<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd"
               xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">
  <component>
    <key>org.exoplatform.portal.mop.dao.PageDAO</key>
    <type>org.exoplatform.portal.mop.dao.mock.InMemoryPageDAO</type>
  </component>
  <component>
    <key>org.exoplatform.portal.mop.dao.ContainerDAO</key>
    <type>org.exoplatform.portal.mop.dao.mock.InMemoryContainerDAO</type>
  </component>
  <component>
    <key>org.exoplatform.portal.mop.dao.WindowDAO</key>
    <type>org.exoplatform.portal.mop.dao.mock.InMemoryWindowDAO</type>
  </component>
  <component>
    <key>org.exoplatform.portal.mop.dao.NavigationDAO</key>
    <type>org.exoplatform.portal.mop.dao.mock.InMemoryNavigationDAO</type>
  </component>
  <component>
    <key>org.exoplatform.portal.mop.dao.NodeDAO</key>
    <type>org.exoplatform.portal.mop.dao.mock.InMemoryNodeDAO</type>
  </component>
  <component>
    <key>org.exoplatform.portal.mop.dao.PermissionDAO</key>
    <type>org.exoplatform.portal.mop.dao.mock.InMemoryPermissionDAO</type>
  </component>
  <component>
    <key>org.exoplatform.portal.mop.dao.DescriptionDAO</key>
    <type>org.exoplatform.portal.mop.dao.mock.InMemoryDescriptionDAO</type>
  </component>
  <component>
    <key>org.exoplatform.portal.mop.dao.SiteDAO</key>
    <type>org.exoplatform.portal.mop.dao.mock.InMemorySiteDAO</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.storage.SiteStorage</key>
    <type>org.exoplatform.portal.mop.storage.mock.InMemorySiteStorage</type>
  </component>
  <!-- Legacy, kept for backward compatibility -->
  <component>
    <key>org.exoplatform.portal.pom.data.ModelDataStorage</key>
    <type>org.exoplatform.portal.mop.storage.mock.InMemorySiteStorage</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.storage.NavigationStorage</key>
    <type>org.exoplatform.portal.mop.storage.cache.CacheNavigationStorage</type>
  </component>
  <!-- Legacy, kept for backward compatibility -->
  <component>
    <key>org.exoplatform.portal.mop.navigation.NavigationStore</key>
    <type>org.exoplatform.portal.mop.storage.cache.CacheNavigationStorage</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.storage.PageStorage</key>
    <type>org.exoplatform.portal.mop.storage.cache.CachePageStorage</type>
  </component>
  <!-- Legacy, kept for backward compatibility -->
  <component>
    <key>org.exoplatform.portal.mop.page.PageService</key>
    <type>org.exoplatform.portal.mop.storage.cache.CachePageStorage</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.storage.DescriptionStorage</key>
    <type>org.exoplatform.portal.mop.storage.cache.CacheDescriptionStorage</type>
  </component>
  <!-- Legacy, kept for backward compatibility -->
  <component>
    <key>org.exoplatform.portal.mop.description.DescriptionService</key>
    <type>org.exoplatform.portal.mop.storage.cache.CacheDescriptionStorage</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.storage.LayoutStorage</key>
    <type>org.exoplatform.portal.mop.storage.cache.CacheLayoutStorage</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.service.LayoutService</key>
    <type>org.exoplatform.portal.mop.service.LayoutServiceImpl</type>
  </component>
  <!-- Legacy, kept for backward compatibility -->
  <component>
    <key>org.exoplatform.portal.config.DataStorage</key>
    <type>org.exoplatform.portal.mop.service.LayoutServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.portal.mop.service.NavigationService</key>
    <type>org.exoplatform.portal.mop.service.NavigationServiceImpl</type>
  </component>
  <!-- Legacy, kept for backward compatibility -->
  <component>
    <key>org.exoplatform.portal.mop.navigation.NavigationService</key>
    <type>org.exoplatform.portal.mop.service.NavigationServiceImpl</type>
  </component>

  <component>
     <type>org.exoplatform.services.rest.impl.ResourceBinder</type>
  </component>

  <component>
     <type>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</type>
  </component>
  <component>
    <type>org.exoplatform.services.rest.impl.RequestHandlerImpl</type>
  </component>

  <component>
    <key>org.exoplatform.services.security.Authenticator</key>
    <type>org.exoplatform.services.organization.auth.OrganizationAuthenticatorImpl</type>
  </component>

  <component>
    <key>org.exoplatform.services.organization.search.UserSearchService</key>
    <type>org.exoplatform.services.organization.search.UserSearchServiceImpl</type>
  </component>
  
  <component>
    <key>org.exoplatform.web.login.recovery.PasswordRecoveryService</key>
    <type>org.exoplatform.mock.MockPasswordRecoveryService</type>
  </component>
  
  <component>
    <key>org.exoplatform.services.listener.ListenerService</key>
    <type>org.exoplatform.mock.ListenerServiceMock</type>
  </component>

  <component>
    <key>org.exoplatform.portal.config.UserACL</key>
    <type>org.exoplatform.portal.config.UserACL</type>
    <init-params>
      <value-param>
        <name>super.user</name>
        <description>administrator</description>
        <value>root</value>
      </value-param>

      <value-param>
        <name>portal.administrator.groups</name>
        <description>administrator</description>
        <value>/platform/administrators</value>
      </value-param>

      <value-param>
        <name>portal.administrator.mstype</name>
        <description>administrator</description>
        <value>manager</value>
      </value-param>

      <value-param>
        <name>portal.creator.groups</name>
        <description>groups with membership type have permission to manage portal</description>
        <value>*:/platform/administrators</value>
      </value-param>

      <value-param>
        <name>navigation.creator.membership.type</name>
        <description>specific membership type have full permission with group navigation</description>
        <value>manager</value>
      </value-param>

      <value-param>
        <name>guests.group</name>
        <description>guests group</description>
        <value>/platform/guests</value>
      </value-param>

      <values-param>
        <name>mandatory.groups</name>
        <description>Groups that can not be deleted.</description>
        <value>/platform/administrators</value>
        <value>/platform/users</value>
        <value>/platform/guests</value>
        <value>/spaces</value>
      </values-param>

      <values-param>
        <name>mandatory.mstypes</name>
        <description>Membership type that can not be deleted.</description>
        <value>member</value>
        <value>manager</value>
        <value>*</value>
      </values-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.portal.config.UserPortalConfigService</key>
    <type>org.exoplatform.portal.config.UserPortalConfigService</type>
    <component-plugins>
      <component-plugin>
          <name>new.portal.config.user.listener</name>
          <set-method>initListener</set-method>
          <type>org.exoplatform.portal.config.NewPortalConfigListener</type>
          <init-params>
              <value-param>
                  <name>default.portal</name>
                  <value>classic</value>
              </value-param>
              <value-param>
                  <name>page.templates.location</name>
                  <value>classpath:/portal/template/pages</value>
              </value-param>
              <value-param>
                  <name>initializing.failure.ignore</name>
                  <value>true</value>
              </value-param>
              <object-param>
                  <name>portal.configuration</name>
                  <object type="org.exoplatform.portal.config.NewPortalConfig">
                      <field name="predefinedOwner">
                          <collection type="java.util.HashSet">
                          </collection>
                      </field>
                      <field name="ownerType">
                          <string>portal</string>
                      </field>
                      <field name="templateLocation">
                          <string>classpath:/org/exoplatform/portal/config/conf</string>
                      </field>
                  </object>
              </object-param>
          </init-params>
      </component-plugin>
    </component-plugins>
    <init-params>
      <value-param>
        <name>create.user.portal</name>
        <value>false</value>
      </value-param>
      <value-param>
        <name>destroy.user.portal</name>
        <value>false</value>
      </value-param>
      <value-param>
        <name>default.import.mode</name>
        <value>conserve</value>
      </value-param>
      <value-param>
        <name>global.portal</name>
        <description>System site name that defines generic pages</description>
        <value>global</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.portal.branding.BrandingService</key>
    <type>org.exoplatform.portal.branding.BrandingServiceImpl</type>
    <init-params>
      <value-param>
        <name>exo.branding.company.name</name>
        <value>${exo.branding.company.name:Web3 Hub}</value>
      </value-param>
      <value-param>
        <name>exo.branding.company.siteName</name>
        <value>${exo.branding.company.siteName:Meeds}</value>
      </value-param>
      <value-param>
        <name>exo.branding.company.link</name>
        <value>${exo.branding.company.link:https://meeds.io}</value>
      </value-param>
      <value-param>
        <name>exo.branding.company.logo</name>
        <value>${exo.branding.company.logo:/skin/images/logo/DefaultLogo.png}</value>
      </value-param>
      <value-param>
        <name>exo.branding.company.favicon</name>
        <value>${exo.branding.company.favicon:/skin/images/favicon.ico}</value>
      </value-param>
      <value-param>
        <name>authentication.background</name>
        <value>${portal.authentication.background:}</value>
      </value-param>
      <value-param>
        <name>authentication.title</name>
        <value>${portal.authentication.title:UILoginForm.label.pageTitle}</value>
      </value-param>
      <value-param>
        <name>authentication.subtitle</name>
        <value>${portal.authentication.subtitle:UILoginForm.label.pageSubTitle}</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <type>org.exoplatform.mock.MockUploadService</type>
    <init-params>
      <value-param>
        <name>upload.limit.size</name>
        <description>Maximum size of the file to upload in MB</description>
        <value>${exo.uploadLimit:10}</value>
      </value-param>
    </init-params>
  </component>

  <external-component-plugins>
    <target-component>org.exoplatform.services.organization.OrganizationService</target-component>
    <component-plugin>
      <name>user.portal.config.listener</name>
      <set-method>addListenerPlugin</set-method>
      <type>org.exoplatform.portal.config.UserPortalConfigListener</type>
    </component-plugin>
    <component-plugin>
      <name>group.portal.config.listener</name>
      <set-method>addListenerPlugin</set-method>
      <type>org.exoplatform.portal.config.GroupPortalConfigListener</type>
    </component-plugin>
  </external-component-plugins>

</configuration>
